<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://oneseek.github.io</id>
    <title>OneSeek</title>
    <updated>2020-03-19T14:29:15.205Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://oneseek.github.io"/>
    <link rel="self" href="https://oneseek.github.io/atom.xml"/>
    <subtitle>Be a coder who can change the world</subtitle>
    <logo>https://oneseek.github.io/images/avatar.png</logo>
    <icon>https://oneseek.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, OneSeek</rights>
    <entry>
        <title type="html"><![CDATA[算法训练 大等于n的最小完全平方数]]></title>
        <id>https://oneseek.github.io/post/suan-fa-xun-lian-da-deng-yu-n-de-zui-xiao-wan-quan-ping-fang-shu/</id>
        <link href="https://oneseek.github.io/post/suan-fa-xun-lian-da-deng-yu-n-de-zui-xiao-wan-quan-ping-fang-shu/">
        </link>
        <updated>2020-03-19T13:56:06.000Z</updated>
        <content type="html"><![CDATA[<pre><code>/*
试题 算法训练 大等于n的最小完全平方数

资源限制
时间限制：1.0s   内存限制：256.0MB
问题描述
　　输出大等于n的最小的完全平方数。
　　若一个数能表示成某个自然数的平方的形式，则称这个数为完全平方数
　　Tips：注意数据范围
输入格式
　　一个整数n
输出格式
　　大等于n的最小的完全平方数
样例输入
71711
样例输出
71824
数据规模和约定
　　n是32位有符号整数
*/
#include &lt;cmath&gt;
#include &lt;cstdio&gt;
using namespace std;
int main() {
    long long n;
    scanf(&quot;%lld&quot;, &amp;n);
    if (n &lt; 0) {
        printf(&quot;%d&quot;, 0);
    }
    else {
        long long i = sqrt(n);
        while (i*i &lt; n) {
			i++;				
		}
        printf(&quot;%lld&quot;, i * i);
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[域名可以ping通 但是网页显示无法访问]]></title>
        <id>https://oneseek.github.io/post/yu-ming-ke-yi-ping-tong-dan-shi-wang-ye-xian-shi-wu-fa-fang-wen/</id>
        <link href="https://oneseek.github.io/post/yu-ming-ke-yi-ping-tong-dan-shi-wang-ye-xian-shi-wu-fa-fang-wen/">
        </link>
        <updated>2020-03-19T13:10:41.000Z</updated>
        <content type="html"><![CDATA[<p>原因可能是 之前的网页缓存和ip缓存没清理，之前也试过清理但是还是不行，早上出的问题，隔了一个下午，就可以用了，也有可能是服务器配置出了问题，中间也重启了几次服务器。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[nginx 资源重定向错误]]></title>
        <id>https://oneseek.github.io/post/nginx-zi-yuan-chong-ding-xiang-cuo-wu/</id>
        <link href="https://oneseek.github.io/post/nginx-zi-yuan-chong-ding-xiang-cuo-wu/">
        </link>
        <updated>2020-03-18T13:12:34.000Z</updated>
        <content type="html"><![CDATA[<p>原因 leanote 页面使用的是绝对 路径 导致 二级目录访问 会跳转到 根目录<br>
例如 localhost/leanote/index 变成 localhost/index</p>
<p>解决方法：<br>
用sub_filter 将请求的资源变成 相对路径<br>
可能会造成从第三方网址的资源不可用 但是暂时只能这样解决了</p>
<pre><code>sub_filter 'src=&quot;/' 'src=&quot;./'; 
sub_filter 'href=&quot;/' 'href=&quot;./'; 
 sub_filter_once off;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[nginx 反向代理]]></title>
        <id>https://oneseek.github.io/post/nginx-sub_filter/</id>
        <link href="https://oneseek.github.io/post/nginx-sub_filter/">
        </link>
        <updated>2020-03-18T05:30:18.000Z</updated>
        <content type="html"><![CDATA[<p>配置leanote时，希望把二级目录 匹配到端口 发现只能进首页其他的url都不对</p>
<p>原因：连接没有重定向到 二级目录下</p>
<p>增加 sub_filter 属性能让首页的资源加载到 但是点击连接别的页面 却被从定向到根目录</p>
<pre><code>listen 80;
        server_name localhost;

        location /leanote/ {
            proxy_pass http://localhost:9000/;
            sub_filter / /leanote;
        }
</code></pre>
<p>解决： 使用代理 把资源匹配到正确路径</p>
<pre><code>location / {
         proxy_pass http://localhost:9000/;
        }
        location /leanote/ {
            proxy_pass http://localhost:9000/;
        }
}
</code></pre>
<p>但是这样</p>
<p>参考文章 ： https://blog.csdn.net/djfjkj52/article/details/96426979</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CentOS7 搭建leanote]]></title>
        <id>https://oneseek.github.io/post/centos7-da-jian-leanote/</id>
        <link href="https://oneseek.github.io/post/centos7-da-jian-leanote/">
        </link>
        <updated>2020-03-17T11:22:02.000Z</updated>
        <content type="html"><![CDATA[<p>1、leanote官网下载二进制文件<br>
2、mongodb下载<br>
3、mongodb配置<br>
4、leanote配置<br>
5、nginx反代</p>
<p>下载leanote linux 二进制文件 https://sourceforge.net/projects/leanote-bin/files/2.6.1/leanote-linux-amd64-v2.6.1.bin.tar.gz/download</p>
<p>https://github.com/leanote/leanote/wiki/Leanote-%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%89%88%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B----Mac-and-Linux</p>
<p>照着做就完了。。。。</p>
<p>二级目录反向代理</p>
<pre><code>server
    {

        listen 80;   
        server_name learn.oneseek.cn;

        location /leanote/ {
            proxy_pass http://localhost:9000/;
        }

    }
</code></pre>
<p>访问 learn.oneseek.cn/learn 进入9000端口的网站</p>
<p>启动mongo命令<br>
mongod --dbpath /home/user1/data<br>
启动leanote<br>
bash run.sh</p>
]]></content>
    </entry>
</feed>